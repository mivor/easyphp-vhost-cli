#!/usr/bin/env bash

# Manage EasyPHP dev server.

#-------------
# Variables
#-------------

exe_path="/d/Feri_dolgai/Programs/srv/EasyPHP-DevServer-13.1VC11.exe"
vhost_url="http://127.0.0.1/modules/virtualhostsmanager/virtualhostsmanager_update.php"
usage="Usage: vhost {start|stop|restart|status|up|down|add|remove}"
srv_pid=""
vhost_data=()
vhost_nr=vhost_data[0]
vhost_name=vhost_data[1]
vhost_hash=vhost_data[2]
#-------------
# Functions
#-------------

get_pid() {
    srv_pid=$(ps aux | grep '[E]asyPHP' | awk '{print $1}')
}

send_data() {
    if [[ "$1" == "add_vhost_2" ]]; then
        curl -s -d "to=$1&vhost_name=$2&vhost_link=$3" $vhost_url
    else
        curl -s -G -d "to=$1&hash=${!vhost_hash}&servername=${!vhost_name}&num_virtualhost=${!vhost_nr}" $vhost_url
    fi
}

unset_vars() {
    unset exe_path
    unset vhost_url
    unset usage
    unset srv_pid
    unset vhost_data
    unset vhost_nr
    unset vhost_name
    unset vhost_hash
}

echo_and_die() {
    if [[ "$@" ]]; then
        echo "$@"
    fi
    unset_vars
    exit 1
}

get_vhost_data() {
    local get_vhost="$1"
    local vhost_nr=vhost[0]
    local vhost_name=vhost[1]
    local data_rest=$(send_data "status_host")
    data_rest=${data_rest#*!}

    while [[ "$data_rest" ]]; do

        vhost=( ${data_rest%%!*} )
        if [[ "$get_vhost" ]]; then
            if [[ "$get_vhost" == "${!vhost_name}" || "$get_vhost" == "${!vhost_nr}" ]]; then
                vhost_data=( ${vhost[@]} )
                return
            fi
        else
            echo ${vhost[@]}
        fi
        data_rest=${data_rest#*!}
    done

    if [[ "$get_vhost" && "$vhost_data" == "" ]]; then
        echo "No vhost found!"
    fi
}

get_pid

# check if server is running
if [[ "$srv_pid" == "" && !("$1" == "st" || "$1" == "start") ]]; then
    echo "No server found!"
    echo "(use: \"vhost start\" to start one)"
    echo_and_die
fi

# Use cases
case "$1" in
        st|start)
            if [[ "$srv_pid" ]]; then
                echo "Server already running!"
            fi
            $exe_path&
            echo "Dev server ready!"
            ;;

        k|kill|stop)
            kill "$srv_pid"
            echo "Dev server shut down!"
            ;;

        rs|rst|restart)
            kill "$srv_pid"
            $exe_path&
            get_pid
            echo "$srv_pid"
            echo "Dev server reseted!"
            ;;

        s|stat|status)
            # status vhost
            echo "Server running! Virtual Hosts:"
            echo "------------------------------"
            get_vhost_data
            ;;

        u|up)
            # activate vhost
            #     GET
            #     to="onoff_host"
            #       hash="off" #status
            #       servername="vhst-server-name"
            #       num_virtualhost="vhost-number"
            get_vhost_data "$2"
            echo "VHOST= ${vhost_data[@]}"
            if [[ ${!vhost_hash} == "on" ]]; then
                echo_and_die "Virtual Host ${!vhost_name} already enabled!"
            fi
            send_data "onoff_host"
            echo "VirtualHost ${!vhost_name} up!"
            ;;

        d|down)
            # deactivate vhost
            #     GET
            #     to="onoff_host"
            #       hash="on" #status
            #       servername="vhst-server-name"
            #       num_virtualhost="vhost-number"
            get_vhost_data "$2"
            echo "VHOST= ${vhost_data[@]}"
            if [[ ${!vhost_hash} == "off" ]]; then
                echo_and_die "Virtual Host ${!vhost_name} already disabled!"
            fi
            send_data "onoff_host"

            echo "VirtualHost ${!vhost_name} down!"
            ;;

        a|add)
            # add vhost
            #     POST
            #     to="add_vhost_2"
            #     lang="en"
            #       vhost_name="link-to-vhost" max 65
            #       vhost_link="path-to-vhost" max 80
            get_vhost_data "$2"
            if [[ "${vhost_data[@]}" ]]; then
                echo_and_die "Virtual Host ${!vhost_name} already exists!"
            fi
            send_data "add_vhost_2 $2 $3"
            echo "VirtualHost ${!vhost_name} added!"
            ;;

        del|rm|remove|delete)
            # delete vhost
            #     GET
            #     to="del_virtualhost"
            #       num_virtualhost="virtualhost-number"
            get_vhost_data "$2"
            echo "VHOST= ${vhost_data[@]}"
            send_data "del_virtualhost"
            echo "VirtualHost ${!vhost_name} removed!"
            ;;

        *)
            echo_and_die "$usage"
esac
